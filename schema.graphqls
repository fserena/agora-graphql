type Way implements Resource {
  _uri: String!
  name: String
  intersects: [Way]
  goesBy: [Building]
  geometry: Geometry
}

type Geometry {
    asWKT: String
}

type Building {
  lat: Float
  long: Float
  isAdjacentTo: [Way]
  hasPropertyGroup: [PropertyGroup]
  geometry: Geometry
}

type PropertyGroup {
  contains: [Property]
  reference: String
}

type Property {
  surface: Float
  reference: String
  door: String
  floor: String
  hasPart: [PropertyPart]
}

type PropertyPart {
    usage: String
    surface: Float
}

type Person {
    name: String
    spouse: [Person]
}

type Query {
    Way(lat: String, lon: String, rad: String, location: String): [Way]
    Building(lat: String, lon: String, rad: String, location: String): [Building]
    Geometry(lat: String, lon: String, rad: String, location: String): [Geometry]
    Person: [Person]
}

schema {
  query: Query
}

interface Resource {
    _uri: String!
}